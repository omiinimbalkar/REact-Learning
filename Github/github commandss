Using Visual Studio:
After committing, go to Team Explorer -> Sync.
Click Push to upload the committed changes to your GitHub repository.
Summary of Commands in CLI:


>>Stage changes:
git add .
>>Commit changes:
git commit -m "Your commit message"
>>Push changes:
git push origin master
 git push origin main



 o push code to GitHub without creating a new repository directly through GitHub's interface, you first need to create the repository from the command line (or use an existing one). Here’s a step-by-step guide to push your local code to a new GitHub repository:

Steps:
1. Create a Repository on GitHub
First, create a new repository on GitHub by going to GitHub and:

Click on the New repository button (usually found under the "Repositories" tab or via the "+" icon in the top-right corner).
Name the repository.
Choose whether it’s public or private.
Do not initialize it with a README or .gitignore (you'll do that locally).
Click Create repository.

2. Initialize Git in Your Local Directory
If you already have a project folder, navigate to it using the terminal:
cd /path/to/your/project

If your project is not already a Git repository, initialize it:
git init

3. Add Files to the Repository
Add all your existing files to the repository:
git add .

4. Commit the Changes
Commit your code:
git commit -m "Initial commit"

5. Add Remote URL
Now, link your local repository to the new GitHub repository you created earlier. Replace USERNAME with your GitHub username and REPO_NAME with the repository name.
git remote add origin https://github.com/USERNAME/REPO_NAME.git

6. Push Your Code to GitHub
Push the code to the master (or main) branch on GitHub:
git push -u origin master

If your default branch is main, use this command instead:
git push -u origin main
